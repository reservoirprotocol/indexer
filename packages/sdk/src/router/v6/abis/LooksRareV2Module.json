[
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "owner",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "router",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "exchange",
        "type": "address"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "inputs": [],
    "name": "InvalidParams",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "Unauthorized",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "UnsuccessfulCall",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "UnsuccessfulFill",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "UnsuccessfulPayment",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "WrongParams",
    "type": "error"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "target",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "bytes",
        "name": "data",
        "type": "bytes"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "value",
        "type": "uint256"
      }
    ],
    "name": "CallExecuted",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "previousOwner",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "OwnershipTransferred",
    "type": "event"
  },
  {
    "inputs": [],
    "name": "EXCHANGE",
    "outputs": [
      {
        "internalType": "contract ILooksRareV2",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "TRANSFER_MANAGER",
    "outputs": [
      {
        "internalType": "contract ITransferManager",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "enum ILooksRareV2.QuoteType",
            "name": "quoteType",
            "type": "uint8"
          },
          {
            "internalType": "uint256",
            "name": "globalNonce",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "subsetNonce",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "orderNonce",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "strategyId",
            "type": "uint256"
          },
          {
            "internalType": "enum ILooksRareV2.CollectionType",
            "name": "collectionType",
            "type": "uint8"
          },
          {
            "internalType": "address",
            "name": "collection",
            "type": "address"
          },
          {
            "internalType": "contract IERC20",
            "name": "currency",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "signer",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "startTime",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "endTime",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "price",
            "type": "uint256"
          },
          {
            "internalType": "uint256[]",
            "name": "itemIds",
            "type": "uint256[]"
          },
          {
            "internalType": "uint256[]",
            "name": "amounts",
            "type": "uint256[]"
          },
          {
            "internalType": "bytes",
            "name": "additionalParameters",
            "type": "bytes"
          }
        ],
        "internalType": "struct ILooksRareV2.MakerOrder",
        "name": "makerBid",
        "type": "tuple"
      },
      {
        "internalType": "bytes",
        "name": "takerAdditionalParameters",
        "type": "bytes"
      },
      {
        "internalType": "bytes",
        "name": "makerSignature",
        "type": "bytes"
      },
      {
        "components": [
          {
            "internalType": "bytes32",
            "name": "root",
            "type": "bytes32"
          },
          {
            "components": [
              {
                "internalType": "bytes32",
                "name": "value",
                "type": "bytes32"
              },
              {
                "internalType": "enum ILooksRareV2.MerkleTreeNodePosition",
                "name": "position",
                "type": "uint8"
              }
            ],
            "internalType": "struct ILooksRareV2.MerkleTreeNode[]",
            "name": "proof",
            "type": "tuple[]"
          }
        ],
        "internalType": "struct ILooksRareV2.MerkleTree",
        "name": "merkleTree",
        "type": "tuple"
      },
      {
        "components": [
          {
            "internalType": "address",
            "name": "fillTo",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "refundTo",
            "type": "address"
          },
          {
            "internalType": "bool",
            "name": "revertIfIncomplete",
            "type": "bool"
          }
        ],
        "internalType": "struct BaseExchangeModule.OfferParams",
        "name": "params",
        "type": "tuple"
      },
      {
        "components": [
          {
            "internalType": "address",
            "name": "recipient",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "internalType": "struct BaseExchangeModule.Fee[]",
        "name": "fees",
        "type": "tuple[]"
      }
    ],
    "name": "acceptERC1155Offer",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "enum ILooksRareV2.QuoteType",
            "name": "quoteType",
            "type": "uint8"
          },
          {
            "internalType": "uint256",
            "name": "globalNonce",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "subsetNonce",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "orderNonce",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "strategyId",
            "type": "uint256"
          },
          {
            "internalType": "enum ILooksRareV2.CollectionType",
            "name": "collectionType",
            "type": "uint8"
          },
          {
            "internalType": "address",
            "name": "collection",
            "type": "address"
          },
          {
            "internalType": "contract IERC20",
            "name": "currency",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "signer",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "startTime",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "endTime",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "price",
            "type": "uint256"
          },
          {
            "internalType": "uint256[]",
            "name": "itemIds",
            "type": "uint256[]"
          },
          {
            "internalType": "uint256[]",
            "name": "amounts",
            "type": "uint256[]"
          },
          {
            "internalType": "bytes",
            "name": "additionalParameters",
            "type": "bytes"
          }
        ],
        "internalType": "struct ILooksRareV2.MakerOrder",
        "name": "makerBid",
        "type": "tuple"
      },
      {
        "internalType": "bytes",
        "name": "takerAdditionalParameters",
        "type": "bytes"
      },
      {
        "internalType": "bytes",
        "name": "makerSignature",
        "type": "bytes"
      },
      {
        "components": [
          {
            "internalType": "bytes32",
            "name": "root",
            "type": "bytes32"
          },
          {
            "components": [
              {
                "internalType": "bytes32",
                "name": "value",
                "type": "bytes32"
              },
              {
                "internalType": "enum ILooksRareV2.MerkleTreeNodePosition",
                "name": "position",
                "type": "uint8"
              }
            ],
            "internalType": "struct ILooksRareV2.MerkleTreeNode[]",
            "name": "proof",
            "type": "tuple[]"
          }
        ],
        "internalType": "struct ILooksRareV2.MerkleTree",
        "name": "merkleTree",
        "type": "tuple"
      },
      {
        "components": [
          {
            "internalType": "address",
            "name": "fillTo",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "refundTo",
            "type": "address"
          },
          {
            "internalType": "bool",
            "name": "revertIfIncomplete",
            "type": "bool"
          }
        ],
        "internalType": "struct BaseExchangeModule.OfferParams",
        "name": "params",
        "type": "tuple"
      },
      {
        "components": [
          {
            "internalType": "address",
            "name": "recipient",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "internalType": "struct BaseExchangeModule.Fee[]",
        "name": "fees",
        "type": "tuple[]"
      }
    ],
    "name": "acceptERC721Offer",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "enum ILooksRareV2.QuoteType",
            "name": "quoteType",
            "type": "uint8"
          },
          {
            "internalType": "uint256",
            "name": "globalNonce",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "subsetNonce",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "orderNonce",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "strategyId",
            "type": "uint256"
          },
          {
            "internalType": "enum ILooksRareV2.CollectionType",
            "name": "collectionType",
            "type": "uint8"
          },
          {
            "internalType": "address",
            "name": "collection",
            "type": "address"
          },
          {
            "internalType": "contract IERC20",
            "name": "currency",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "signer",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "startTime",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "endTime",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "price",
            "type": "uint256"
          },
          {
            "internalType": "uint256[]",
            "name": "itemIds",
            "type": "uint256[]"
          },
          {
            "internalType": "uint256[]",
            "name": "amounts",
            "type": "uint256[]"
          },
          {
            "internalType": "bytes",
            "name": "additionalParameters",
            "type": "bytes"
          }
        ],
        "internalType": "struct ILooksRareV2.MakerOrder",
        "name": "makerAsk",
        "type": "tuple"
      },
      {
        "internalType": "bytes",
        "name": "makerSignature",
        "type": "bytes"
      },
      {
        "components": [
          {
            "internalType": "bytes32",
            "name": "root",
            "type": "bytes32"
          },
          {
            "components": [
              {
                "internalType": "bytes32",
                "name": "value",
                "type": "bytes32"
              },
              {
                "internalType": "enum ILooksRareV2.MerkleTreeNodePosition",
                "name": "position",
                "type": "uint8"
              }
            ],
            "internalType": "struct ILooksRareV2.MerkleTreeNode[]",
            "name": "proof",
            "type": "tuple[]"
          }
        ],
        "internalType": "struct ILooksRareV2.MerkleTree",
        "name": "merkleTree",
        "type": "tuple"
      },
      {
        "components": [
          {
            "internalType": "address",
            "name": "fillTo",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "refundTo",
            "type": "address"
          },
          {
            "internalType": "bool",
            "name": "revertIfIncomplete",
            "type": "bool"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "internalType": "struct BaseExchangeModule.ETHListingParams",
        "name": "params",
        "type": "tuple"
      },
      {
        "components": [
          {
            "internalType": "address",
            "name": "recipient",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "internalType": "struct BaseExchangeModule.Fee[]",
        "name": "fees",
        "type": "tuple[]"
      }
    ],
    "name": "acceptETHListing",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "enum ILooksRareV2.QuoteType",
            "name": "quoteType",
            "type": "uint8"
          },
          {
            "internalType": "uint256",
            "name": "globalNonce",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "subsetNonce",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "orderNonce",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "strategyId",
            "type": "uint256"
          },
          {
            "internalType": "enum ILooksRareV2.CollectionType",
            "name": "collectionType",
            "type": "uint8"
          },
          {
            "internalType": "address",
            "name": "collection",
            "type": "address"
          },
          {
            "internalType": "contract IERC20",
            "name": "currency",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "signer",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "startTime",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "endTime",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "price",
            "type": "uint256"
          },
          {
            "internalType": "uint256[]",
            "name": "itemIds",
            "type": "uint256[]"
          },
          {
            "internalType": "uint256[]",
            "name": "amounts",
            "type": "uint256[]"
          },
          {
            "internalType": "bytes",
            "name": "additionalParameters",
            "type": "bytes"
          }
        ],
        "internalType": "struct ILooksRareV2.MakerOrder[]",
        "name": "makerAsks",
        "type": "tuple[]"
      },
      {
        "internalType": "bytes[]",
        "name": "makerSignatures",
        "type": "bytes[]"
      },
      {
        "components": [
          {
            "internalType": "bytes32",
            "name": "root",
            "type": "bytes32"
          },
          {
            "components": [
              {
                "internalType": "bytes32",
                "name": "value",
                "type": "bytes32"
              },
              {
                "internalType": "enum ILooksRareV2.MerkleTreeNodePosition",
                "name": "position",
                "type": "uint8"
              }
            ],
            "internalType": "struct ILooksRareV2.MerkleTreeNode[]",
            "name": "proof",
            "type": "tuple[]"
          }
        ],
        "internalType": "struct ILooksRareV2.MerkleTree[]",
        "name": "merkleTrees",
        "type": "tuple[]"
      },
      {
        "components": [
          {
            "internalType": "address",
            "name": "fillTo",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "refundTo",
            "type": "address"
          },
          {
            "internalType": "bool",
            "name": "revertIfIncomplete",
            "type": "bool"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "internalType": "struct BaseExchangeModule.ETHListingParams",
        "name": "params",
        "type": "tuple"
      },
      {
        "components": [
          {
            "internalType": "address",
            "name": "recipient",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "internalType": "struct BaseExchangeModule.Fee[]",
        "name": "fees",
        "type": "tuple[]"
      }
    ],
    "name": "acceptETHListings",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "claimOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address[]",
        "name": "targets",
        "type": "address[]"
      },
      {
        "internalType": "bytes[]",
        "name": "data",
        "type": "bytes[]"
      },
      {
        "internalType": "uint256[]",
        "name": "values",
        "type": "uint256[]"
      }
    ],
    "name": "makeCalls",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      },
      {
        "internalType": "bytes",
        "name": "data",
        "type": "bytes"
      }
    ],
    "name": "onERC1155Received",
    "outputs": [
      {
        "internalType": "bytes4",
        "name": "",
        "type": "bytes4"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      },
      {
        "internalType": "bytes",
        "name": "data",
        "type": "bytes"
      }
    ],
    "name": "onERC721Received",
    "outputs": [
      {
        "internalType": "bytes4",
        "name": "",
        "type": "bytes4"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "owner",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "pendingOwner",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "router",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "transferOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "stateMutability": "payable",
    "type": "receive"
  }
]
