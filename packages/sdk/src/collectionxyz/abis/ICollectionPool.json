[
  {
    "inputs": [],
    "name": "NFTsCount",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256[]",
        "name": "tokenIDs",
        "type": "uint256[]"
      },
      {
        "internalType": "bytes32[]",
        "name": "proof",
        "type": "bytes32[]"
      },
      {
        "internalType": "bool[]",
        "name": "proofFlags",
        "type": "bool[]"
      }
    ],
    "name": "acceptsTokenIDs",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "numNFTs",
        "type": "uint256"
      }
    ],
    "name": "balanceToFulfillSellNFT",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "balance",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "bondingCurve",
    "outputs": [
      {
        "internalType": "contract ICurve",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint24",
        "name": "newFee",
        "type": "uint24"
      }
    ],
    "name": "changeFee",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "curveParams",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint128",
            "name": "spotPrice",
            "type": "uint128"
          },
          {
            "internalType": "uint128",
            "name": "delta",
            "type": "uint128"
          },
          {
            "internalType": "bytes",
            "name": "props",
            "type": "bytes"
          },
          {
            "internalType": "bytes",
            "name": "state",
            "type": "bytes"
          }
        ],
        "internalType": "struct ICurve.Params",
        "name": "params",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256[]",
        "name": "ids",
        "type": "uint256[]"
      },
      {
        "internalType": "bytes32[]",
        "name": "proof",
        "type": "bytes32[]"
      },
      {
        "internalType": "bool[]",
        "name": "proofFlags",
        "type": "bool[]"
      }
    ],
    "name": "depositNFTs",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256[]",
        "name": "nftIds",
        "type": "uint256[]"
      }
    ],
    "name": "depositNFTsNotification",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "externalFilter",
    "outputs": [
      {
        "internalType": "contract IExternalFilter",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "fee",
    "outputs": [
      {
        "internalType": "uint24",
        "name": "",
        "type": "uint24"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getAllHeldIds",
    "outputs": [
      {
        "internalType": "uint256[]",
        "name": "",
        "type": "uint256[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "numNFTs",
        "type": "uint256"
      }
    ],
    "name": "getBuyNFTQuote",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint128",
            "name": "spotPrice",
            "type": "uint128"
          },
          {
            "internalType": "uint128",
            "name": "delta",
            "type": "uint128"
          },
          {
            "internalType": "bytes",
            "name": "props",
            "type": "bytes"
          },
          {
            "internalType": "bytes",
            "name": "state",
            "type": "bytes"
          }
        ],
        "internalType": "struct ICurve.Params",
        "name": "newParams",
        "type": "tuple"
      },
      {
        "internalType": "uint256",
        "name": "totalAmount",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "inputAmount",
        "type": "uint256"
      },
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "trade",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "protocol",
            "type": "uint256"
          },
          {
            "internalType": "uint256[]",
            "name": "royalties",
            "type": "uint256[]"
          }
        ],
        "internalType": "struct ICurve.Fees",
        "name": "fees",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "numNFTs",
        "type": "uint256"
      }
    ],
    "name": "getSellNFTQuote",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint128",
            "name": "spotPrice",
            "type": "uint128"
          },
          {
            "internalType": "uint128",
            "name": "delta",
            "type": "uint128"
          },
          {
            "internalType": "bytes",
            "name": "props",
            "type": "bytes"
          },
          {
            "internalType": "bytes",
            "name": "state",
            "type": "bytes"
          }
        ],
        "internalType": "struct ICurve.Params",
        "name": "newParams",
        "type": "tuple"
      },
      {
        "internalType": "uint256",
        "name": "totalAmount",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "outputAmount",
        "type": "uint256"
      },
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "trade",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "protocol",
            "type": "uint256"
          },
          {
            "internalType": "uint256[]",
            "name": "royalties",
            "type": "uint256[]"
          }
        ],
        "internalType": "struct ICurve.Fees",
        "name": "fees",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address payable",
        "name": "_assetRecipient",
        "type": "address"
      },
      {
        "internalType": "uint128",
        "name": "_delta",
        "type": "uint128"
      },
      {
        "internalType": "uint24",
        "name": "_fee",
        "type": "uint24"
      },
      {
        "internalType": "uint128",
        "name": "_spotPrice",
        "type": "uint128"
      },
      {
        "internalType": "bytes",
        "name": "_props",
        "type": "bytes"
      },
      {
        "internalType": "bytes",
        "name": "_state",
        "type": "bytes"
      },
      {
        "internalType": "uint24",
        "name": "_royaltyNumerator",
        "type": "uint24"
      },
      {
        "internalType": "address payable",
        "name": "_royaltyRecipientFallback",
        "type": "address"
      }
    ],
    "name": "initialize",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "liquidity",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "nft",
    "outputs": [
      {
        "internalType": "contract IERC721",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "poolSwapsPaused",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "poolType",
    "outputs": [
      {
        "internalType": "enum PoolType",
        "name": "",
        "type": "uint8"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "poolVariant",
    "outputs": [
      {
        "internalType": "enum PoolVariant",
        "name": "",
        "type": "uint8"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "royaltyNumerator",
    "outputs": [
      {
        "internalType": "uint24",
        "name": "",
        "type": "uint24"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "provider",
        "type": "address"
      }
    ],
    "name": "setExternalFilter",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "merkleRoot",
        "type": "bytes32"
      },
      {
        "internalType": "bytes",
        "name": "encodedTokenIDs",
        "type": "bytes"
      }
    ],
    "name": "setTokenIDFilter",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "uint256[]",
            "name": "ids",
            "type": "uint256[]"
          },
          {
            "internalType": "bytes32[]",
            "name": "proof",
            "type": "bytes32[]"
          },
          {
            "internalType": "bool[]",
            "name": "proofFlags",
            "type": "bool[]"
          }
        ],
        "internalType": "struct NFTs",
        "name": "nfts",
        "type": "tuple"
      },
      {
        "internalType": "uint256",
        "name": "minExpectedTokenOutput",
        "type": "uint256"
      },
      {
        "internalType": "address payable",
        "name": "tokenRecipient",
        "type": "address"
      },
      {
        "internalType": "bool",
        "name": "isRouter",
        "type": "bool"
      },
      {
        "internalType": "address",
        "name": "routerCaller",
        "type": "address"
      },
      {
        "internalType": "bytes",
        "name": "externalFilterContext",
        "type": "bytes"
      }
    ],
    "name": "swapNFTsForToken",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "outputAmount",
        "type": "uint256"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "numNFTs",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "maxExpectedTokenInput",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "nftRecipient",
        "type": "address"
      },
      {
        "internalType": "bool",
        "name": "isRouter",
        "type": "bool"
      },
      {
        "internalType": "address",
        "name": "routerCaller",
        "type": "address"
      }
    ],
    "name": "swapTokenForAnyNFTs",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "inputAmount",
        "type": "uint256"
      }
    ],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "tokenIDFilterRoot",
    "outputs": [
      {
        "internalType": "bytes32",
        "name": "",
        "type": "bytes32"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "contract IERC1155",
        "name": "a",
        "type": "address"
      },
      {
        "internalType": "uint256[]",
        "name": "ids",
        "type": "uint256[]"
      },
      {
        "internalType": "uint256[]",
        "name": "amounts",
        "type": "uint256[]"
      }
    ],
    "name": "withdrawERC1155",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "contract ERC20",
        "name": "a",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "withdrawERC20",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "contract IERC721",
        "name": "a",
        "type": "address"
      },
      {
        "internalType": "uint256[]",
        "name": "nftIds",
        "type": "uint256[]"
      }
    ],
    "name": "withdrawERC721",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  }
]
